<RingBufferTarget truncated="0" processingTime="0" totalEventsProcessed="56" eventCount="56" droppedCount="0" memoryUsed="115573">
  <event name="sql_batch_completed" package="sqlserver" timestamp="2016-02-02T12:39:39.063Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>11034</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>63</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="batch_text">
      <type name="unicode_string" package="package0" />
      <value>
alter event session fabricio on server
	state = start</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:39:47.373Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5701</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed database context to 'master'.</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:39:47.373Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5703</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed language setting to us_english.</value>
    </data>
  </event>
  <event name="sp_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:47.375Z">
    <data name="source_database_id">
      <type name="uint32" package="package0" />
      <value>1</value>
    </data>
    <data name="object_id">
      <type name="int32" package="package0" />
      <value>295448214</value>
    </data>
    <data name="object_type">
      <type name="object_type" package="sqlserver" />
      <value>20816</value>
      <text>PREPARED</text>
    </data>
    <data name="duration">
      <type name="int64" package="package0" />
      <value>313</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>6</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="nest_level">
      <type name="uint16" package="package0" />
      <value>2</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>56</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>316</value>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value />
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>SELECT
dtb.collation_name AS [Collation],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)</value>
    </data>
  </event>
  <event name="rpc_completed" package="sqlserver" timestamp="2016-02-02T12:39:47.376Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>2521</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>6</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="connection_reset_option">
      <type name="connection_reset_option" package="sqlserver" />
      <value>0</value>
      <text>None</text>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value>sp_executesql</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>exec sp_executesql N'SELECT
dtb.collation_name AS [Collation],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'</value>
    </data>
    <data name="data_stream">
      <type name="binary_data" package="package0" />
      <value />
    </data>
    <data name="output_parameters">
      <type name="xml" package="package0" />
      <value />
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:39:47.383Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5701</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed database context to 'master'.</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:39:47.383Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5703</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed language setting to us_english.</value>
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:47.385Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>1433</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>25</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>0</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>314</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>SELECT
dtb.name AS [Name],
dtb.database_id AS [ID],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible]
FROM
master.sys.databases AS dtb
ORDER BY
[Name] ASC</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_batch_completed" package="sqlserver" timestamp="2016-02-02T12:39:47.385Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>1500</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>25</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="batch_text">
      <type name="unicode_string" package="package0" />
      <value>SELECT
dtb.name AS [Name],
dtb.database_id AS [ID],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible]
FROM
master.sys.databases AS dtb
ORDER BY
[Name] ASC</value>
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:50.801Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>103</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>0</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>62</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:50.801Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>253</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>42</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>68</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>144</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.server_event_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_batch_completed" package="sqlserver" timestamp="2016-02-02T12:39:50.801Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>15000</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>10800</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>73</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>9</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="batch_text">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions
select * from sys.server_event_sessions
</value>
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.024Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>59</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>0</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>62</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.024Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>123</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>42</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>68</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>144</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.server_event_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_batch_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.024Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>217</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>42</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>9</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="batch_text">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions
select * from sys.server_event_sessions
</value>
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.240Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>75</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>0</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>62</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.240Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>218</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>42</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>68</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>144</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.server_event_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_batch_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.240Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>346</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>42</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>9</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="batch_text">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions
select * from sys.server_event_sessions
</value>
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.537Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>82</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>0</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>62</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.539Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>1542</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>42</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>68</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>144</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.server_event_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_batch_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.539Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>1751</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>42</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>9</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="batch_text">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions
select * from sys.server_event_sessions
</value>
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.750Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>58</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>0</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>62</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.750Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>112</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>42</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>68</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>144</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.server_event_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_batch_completed" package="sqlserver" timestamp="2016-02-02T12:39:51.751Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>206</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>42</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>9</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="batch_text">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions
select * from sys.server_event_sessions
</value>
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:40:05.561Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>60</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>0</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>62</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_batch_completed" package="sqlserver" timestamp="2016-02-02T12:40:05.561Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>90</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>4</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="batch_text">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_sessions</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.572Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5701</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed database context to 'master'.</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.572Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5703</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed language setting to us_english.</value>
    </data>
  </event>
  <event name="sp_statement_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.574Z">
    <data name="source_database_id">
      <type name="uint32" package="package0" />
      <value>1</value>
    </data>
    <data name="object_id">
      <type name="int32" package="package0" />
      <value>499253493</value>
    </data>
    <data name="object_type">
      <type name="object_type" package="sqlserver" />
      <value>20816</value>
      <text>PREPARED</text>
    </data>
    <data name="duration">
      <type name="int64" package="package0" />
      <value>1227</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>117</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>6</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>6</value>
    </data>
    <data name="nest_level">
      <type name="uint16" package="package0" />
      <value>2</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>164</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>3832</value>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value />
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>SELECT
clmns.column_id AS [ID],
clmns.name AS [Name],
clmns.is_nullable AS [Nullable],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_identity AS [Identity],
usrt.name AS [DataType],
ISNULL(baset.name, N'') AS [SystemType],
CAST(CASE WHEN baset.name IN (N'nchar', N'nvarchar') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
s1clmns.name AS [DataTypeSchema]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
WHERE
(v.type = @_msparam_0)and(v.name=@_msparam_1 and SCHEMA_NAME(v.schema_id)=@_msparam_2)
ORDER BY
[ID] ASC</value>
    </data>
  </event>
  <event name="rpc_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.574Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>1387</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>117</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>6</value>
    </data>
    <data name="connection_reset_option">
      <type name="connection_reset_option" package="sqlserver" />
      <value>0</value>
      <text>None</text>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value>sp_executesql</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>exec sp_executesql N'SELECT
clmns.column_id AS [ID],
clmns.name AS [Name],
clmns.is_nullable AS [Nullable],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_identity AS [Identity],
usrt.name AS [DataType],
ISNULL(baset.name, N'''') AS [SystemType],
CAST(CASE WHEN baset.name IN (N''nchar'', N''nvarchar'') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'''') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'''') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
s1clmns.name AS [DataTypeSchema]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
WHERE
(v.type = @_msparam_0)and(v.name=@_msparam_1 and SCHEMA_NAME(v.schema_id)=@_msparam_2)
ORDER BY
[ID] ASC',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000),@_msparam_2 nvarchar(4000)',@_msparam_0=N'V',@_msparam_1=N'dm_xe_session_targets',@_msparam_2=N'sys'</value>
    </data>
    <data name="data_stream">
      <type name="binary_data" package="package0" />
      <value />
    </data>
    <data name="output_parameters">
      <type name="xml" package="package0" />
      <value />
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.599Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5701</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed database context to 'master'.</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.599Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5703</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed language setting to us_english.</value>
    </data>
  </event>
  <event name="sp_statement_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.602Z">
    <data name="source_database_id">
      <type name="uint32" package="package0" />
      <value>1</value>
    </data>
    <data name="object_id">
      <type name="int32" package="package0" />
      <value>403031756</value>
    </data>
    <data name="object_type">
      <type name="object_type" package="sqlserver" />
      <value>20816</value>
      <text>PREPARED</text>
    </data>
    <data name="duration">
      <type name="int64" package="package0" />
      <value>1523</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="nest_level">
      <type name="uint16" package="package0" />
      <value>2</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>218</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>8018</value>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value />
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsDeterministic'),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsPrecise'),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsFulltextIndexed') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'StatisticalSemantics') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'') AS [SystemType],
CAST(CASE WHEN baset.name IN (N'nchar', N'nvarchar') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N'structured' ELSE N'' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))</value>
    </data>
  </event>
  <event name="rpc_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.602Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>1746</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="connection_reset_option">
      <type name="connection_reset_option" package="sqlserver" />
      <value>0</value>
      <text>None</text>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value>sp_executesql</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>exec sp_executesql N'SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsDeterministic''),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsPrecise''),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'''') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'''' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'''' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsFulltextIndexed'') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''StatisticalSemantics'') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'''') AS [SystemType],
CAST(CASE WHEN baset.name IN (N''nchar'', N''nvarchar'') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'''') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'''') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N''structured'' ELSE N'''' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000),@_msparam_2 nvarchar(4000),@_msparam_3 nvarchar(4000)',@_msparam_0=N'event_session_address',@_msparam_1=N'V',@_msparam_2=N'dm_xe_session_targets',@_msparam_3=N'sys'</value>
    </data>
    <data name="data_stream">
      <type name="binary_data" package="package0" />
      <value />
    </data>
    <data name="output_parameters">
      <type name="xml" package="package0" />
      <value />
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.609Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5701</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed database context to 'master'.</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.610Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5703</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed language setting to us_english.</value>
    </data>
  </event>
  <event name="sp_statement_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.611Z">
    <data name="source_database_id">
      <type name="uint32" package="package0" />
      <value>1</value>
    </data>
    <data name="object_id">
      <type name="int32" package="package0" />
      <value>403031756</value>
    </data>
    <data name="object_type">
      <type name="object_type" package="sqlserver" />
      <value>20816</value>
      <text>PREPARED</text>
    </data>
    <data name="duration">
      <type name="int64" package="package0" />
      <value>583</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>39</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="nest_level">
      <type name="uint16" package="package0" />
      <value>2</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>218</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>8018</value>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value />
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsDeterministic'),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsPrecise'),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsFulltextIndexed') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'StatisticalSemantics') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'') AS [SystemType],
CAST(CASE WHEN baset.name IN (N'nchar', N'nvarchar') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N'structured' ELSE N'' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))</value>
    </data>
  </event>
  <event name="rpc_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.611Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>15000</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>692</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>39</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="connection_reset_option">
      <type name="connection_reset_option" package="sqlserver" />
      <value>0</value>
      <text>None</text>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value>sp_executesql</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>exec sp_executesql N'SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsDeterministic''),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsPrecise''),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'''') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'''' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'''' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsFulltextIndexed'') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''StatisticalSemantics'') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'''') AS [SystemType],
CAST(CASE WHEN baset.name IN (N''nchar'', N''nvarchar'') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'''') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'''') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N''structured'' ELSE N'''' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000),@_msparam_2 nvarchar(4000),@_msparam_3 nvarchar(4000)',@_msparam_0=N'target_name',@_msparam_1=N'V',@_msparam_2=N'dm_xe_session_targets',@_msparam_3=N'sys'</value>
    </data>
    <data name="data_stream">
      <type name="binary_data" package="package0" />
      <value />
    </data>
    <data name="output_parameters">
      <type name="xml" package="package0" />
      <value />
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.617Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5701</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed database context to 'master'.</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.617Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5703</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed language setting to us_english.</value>
    </data>
  </event>
  <event name="sp_statement_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.618Z">
    <data name="source_database_id">
      <type name="uint32" package="package0" />
      <value>1</value>
    </data>
    <data name="object_id">
      <type name="int32" package="package0" />
      <value>403031756</value>
    </data>
    <data name="object_type">
      <type name="object_type" package="sqlserver" />
      <value>20816</value>
      <text>PREPARED</text>
    </data>
    <data name="duration">
      <type name="int64" package="package0" />
      <value>342</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="nest_level">
      <type name="uint16" package="package0" />
      <value>2</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>218</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>8018</value>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value />
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsDeterministic'),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsPrecise'),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsFulltextIndexed') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'StatisticalSemantics') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'') AS [SystemType],
CAST(CASE WHEN baset.name IN (N'nchar', N'nvarchar') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N'structured' ELSE N'' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))</value>
    </data>
  </event>
  <event name="rpc_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.618Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>443</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="connection_reset_option">
      <type name="connection_reset_option" package="sqlserver" />
      <value>0</value>
      <text>None</text>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value>sp_executesql</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>exec sp_executesql N'SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsDeterministic''),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsPrecise''),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'''') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'''' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'''' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsFulltextIndexed'') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''StatisticalSemantics'') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'''') AS [SystemType],
CAST(CASE WHEN baset.name IN (N''nchar'', N''nvarchar'') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'''') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'''') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N''structured'' ELSE N'''' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000),@_msparam_2 nvarchar(4000),@_msparam_3 nvarchar(4000)',@_msparam_0=N'target_package_guid',@_msparam_1=N'V',@_msparam_2=N'dm_xe_session_targets',@_msparam_3=N'sys'</value>
    </data>
    <data name="data_stream">
      <type name="binary_data" package="package0" />
      <value />
    </data>
    <data name="output_parameters">
      <type name="xml" package="package0" />
      <value />
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.626Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5701</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed database context to 'master'.</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.626Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5703</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed language setting to us_english.</value>
    </data>
  </event>
  <event name="sp_statement_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.627Z">
    <data name="source_database_id">
      <type name="uint32" package="package0" />
      <value>1</value>
    </data>
    <data name="object_id">
      <type name="int32" package="package0" />
      <value>403031756</value>
    </data>
    <data name="object_type">
      <type name="object_type" package="sqlserver" />
      <value>20816</value>
      <text>PREPARED</text>
    </data>
    <data name="duration">
      <type name="int64" package="package0" />
      <value>374</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="nest_level">
      <type name="uint16" package="package0" />
      <value>2</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>218</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>8018</value>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value />
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsDeterministic'),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsPrecise'),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsFulltextIndexed') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'StatisticalSemantics') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'') AS [SystemType],
CAST(CASE WHEN baset.name IN (N'nchar', N'nvarchar') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N'structured' ELSE N'' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))</value>
    </data>
  </event>
  <event name="rpc_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.628Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>480</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="connection_reset_option">
      <type name="connection_reset_option" package="sqlserver" />
      <value>0</value>
      <text>None</text>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value>sp_executesql</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>exec sp_executesql N'SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsDeterministic''),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsPrecise''),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'''') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'''' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'''' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsFulltextIndexed'') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''StatisticalSemantics'') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'''') AS [SystemType],
CAST(CASE WHEN baset.name IN (N''nchar'', N''nvarchar'') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'''') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'''') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N''structured'' ELSE N'''' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000),@_msparam_2 nvarchar(4000),@_msparam_3 nvarchar(4000)',@_msparam_0=N'execution_count',@_msparam_1=N'V',@_msparam_2=N'dm_xe_session_targets',@_msparam_3=N'sys'</value>
    </data>
    <data name="data_stream">
      <type name="binary_data" package="package0" />
      <value />
    </data>
    <data name="output_parameters">
      <type name="xml" package="package0" />
      <value />
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.634Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5701</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed database context to 'master'.</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.634Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5703</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed language setting to us_english.</value>
    </data>
  </event>
  <event name="sp_statement_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.635Z">
    <data name="source_database_id">
      <type name="uint32" package="package0" />
      <value>1</value>
    </data>
    <data name="object_id">
      <type name="int32" package="package0" />
      <value>403031756</value>
    </data>
    <data name="object_type">
      <type name="object_type" package="sqlserver" />
      <value>20816</value>
      <text>PREPARED</text>
    </data>
    <data name="duration">
      <type name="int64" package="package0" />
      <value>482</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="nest_level">
      <type name="uint16" package="package0" />
      <value>2</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>218</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>8018</value>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value />
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsDeterministic'),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsPrecise'),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsFulltextIndexed') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'StatisticalSemantics') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'') AS [SystemType],
CAST(CASE WHEN baset.name IN (N'nchar', N'nvarchar') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N'structured' ELSE N'' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))</value>
    </data>
  </event>
  <event name="rpc_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.635Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>579</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="connection_reset_option">
      <type name="connection_reset_option" package="sqlserver" />
      <value>0</value>
      <text>None</text>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value>sp_executesql</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>exec sp_executesql N'SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsDeterministic''),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsPrecise''),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'''') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'''' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'''' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsFulltextIndexed'') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''StatisticalSemantics'') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'''') AS [SystemType],
CAST(CASE WHEN baset.name IN (N''nchar'', N''nvarchar'') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'''') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'''') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N''structured'' ELSE N'''' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000),@_msparam_2 nvarchar(4000),@_msparam_3 nvarchar(4000)',@_msparam_0=N'execution_duration_ms',@_msparam_1=N'V',@_msparam_2=N'dm_xe_session_targets',@_msparam_3=N'sys'</value>
    </data>
    <data name="data_stream">
      <type name="binary_data" package="package0" />
      <value />
    </data>
    <data name="output_parameters">
      <type name="xml" package="package0" />
      <value />
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.642Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5701</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>2</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed database context to 'master'.</value>
    </data>
  </event>
  <event name="error_reported" package="sqlserver" timestamp="2016-02-02T12:40:08.642Z">
    <data name="error_number">
      <type name="int32" package="package0" />
      <value>5703</value>
    </data>
    <data name="severity">
      <type name="int32" package="package0" />
      <value>10</value>
    </data>
    <data name="state">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="user_defined">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="category">
      <type name="error_category" package="sqlserver" />
      <value>2</value>
      <text>SERVER</text>
    </data>
    <data name="destination">
      <type name="error_destination" package="sqlserver" />
      <value>0x00000002</value>
      <text>USER</text>
    </data>
    <data name="is_intercepted">
      <type name="boolean" package="package0" />
      <value>false</value>
    </data>
    <data name="message">
      <type name="unicode_string" package="package0" />
      <value>Changed language setting to us_english.</value>
    </data>
  </event>
  <event name="sp_statement_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.645Z">
    <data name="source_database_id">
      <type name="uint32" package="package0" />
      <value>1</value>
    </data>
    <data name="object_id">
      <type name="int32" package="package0" />
      <value>403031756</value>
    </data>
    <data name="object_type">
      <type name="object_type" package="sqlserver" />
      <value>20816</value>
      <text>PREPARED</text>
    </data>
    <data name="duration">
      <type name="int64" package="package0" />
      <value>337</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="nest_level">
      <type name="uint16" package="package0" />
      <value>2</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>218</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>8018</value>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value />
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsDeterministic'),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsPrecise'),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'' when d.parent_object_id &gt; 0 then N'' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'IsFulltextIndexed') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N'StatisticalSemantics') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'') AS [SystemType],
CAST(CASE WHEN baset.name IN (N'nchar', N'nvarchar') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N'structured' ELSE N'' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))</value>
    </data>
  </event>
  <event name="rpc_completed" package="sqlserver" timestamp="2016-02-02T12:40:08.645Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>434</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>36</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>1</value>
    </data>
    <data name="connection_reset_option">
      <type name="connection_reset_option" package="sqlserver" />
      <value>0</value>
      <text>None</text>
    </data>
    <data name="object_name">
      <type name="unicode_string" package="package0" />
      <value>sp_executesql</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>exec sp_executesql N'SELECT
clmns.name AS [Name],
clmns.column_id AS [ID],
clmns.is_nullable AS [Nullable],
clmns.is_computed AS [Computed],
CAST(ISNULL(cik.index_column_id, 0) AS bit) AS [InPrimaryKey],
clmns.is_ansi_padded AS [AnsiPaddingStatus],
CAST(clmns.is_rowguidcol AS bit) AS [RowGuidCol],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsDeterministic''),0) AS bit) AS [IsDeterministic],
CAST(ISNULL(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsPrecise''),0) AS bit) AS [IsPrecise],
CAST(ISNULL(cc.is_persisted, 0) AS bit) AS [IsPersisted],
ISNULL(clmns.collation_name, N'''') AS [Collation],
CAST(ISNULL((select TOP 1 1 from sys.foreign_key_columns AS colfk where colfk.parent_column_id = clmns.column_id and colfk.parent_object_id = clmns.object_id), 0) AS bit) AS [IsForeignKey],
clmns.is_identity AS [Identity],
CAST(ISNULL(ic.seed_value,0) AS bigint) AS [IdentitySeed],
CAST(ISNULL(ic.increment_value,0) AS bigint) AS [IdentityIncrement],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else d.name end) AS [Default],
(case when clmns.default_object_id = 0 then N'''' when d.parent_object_id &gt; 0 then N'''' else schema_name(d.schema_id) end) AS [DefaultSchema],
(case when clmns.rule_object_id = 0 then N'''' else r.name end) AS [Rule],
(case when clmns.rule_object_id = 0 then N'''' else schema_name(r.schema_id) end) AS [RuleSchema],
ISNULL(ic.is_not_for_replication, 0) AS [NotForReplication],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''IsFulltextIndexed'') AS bit) AS [IsFullTextIndexed],
CAST(COLUMNPROPERTY(clmns.object_id, clmns.name, N''StatisticalSemantics'') AS int) AS [StatisticalSemantics],
CAST(clmns.is_filestream AS bit) AS [IsFileStream],
CAST(clmns.is_sparse AS bit) AS [IsSparse],
CAST(clmns.is_column_set AS bit) AS [IsColumnSet],
usrt.name AS [DataType],
s1clmns.name AS [DataTypeSchema],
ISNULL(baset.name, N'''') AS [SystemType],
CAST(CASE WHEN baset.name IN (N''nchar'', N''nvarchar'') AND clmns.max_length &lt;&gt; -1 THEN clmns.max_length/2 ELSE clmns.max_length END AS int) AS [Length],
CAST(clmns.precision AS int) AS [NumericPrecision],
CAST(clmns.scale AS int) AS [NumericScale],
ISNULL(xscclmns.name, N'''') AS [XmlSchemaNamespace],
ISNULL(s2clmns.name, N'''') AS [XmlSchemaNamespaceSchema],
ISNULL( (case clmns.is_xml_document when 1 then 2 else 1 end), 0) AS [XmlDocumentConstraint],
CASE WHEN usrt.is_table_type = 1 THEN N''structured'' ELSE N'''' END AS [UserType]
FROM
sys.all_views AS v
INNER JOIN sys.all_columns AS clmns ON clmns.object_id=v.object_id
LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id and 1=ik.is_primary_key
LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column
LEFT OUTER JOIN sys.computed_columns AS cc ON cc.object_id = clmns.object_id and cc.column_id = clmns.column_id
LEFT OUTER JOIN sys.identity_columns AS ic ON ic.object_id = clmns.object_id and ic.column_id = clmns.column_id
LEFT OUTER JOIN sys.objects AS d ON d.object_id = clmns.default_object_id
LEFT OUTER JOIN sys.objects AS r ON r.object_id = clmns.rule_object_id
LEFT OUTER JOIN sys.types AS usrt ON usrt.user_type_id = clmns.user_type_id
LEFT OUTER JOIN sys.schemas AS s1clmns ON s1clmns.schema_id = usrt.schema_id
LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1)) 
LEFT OUTER JOIN sys.xml_schema_collections AS xscclmns ON xscclmns.xml_collection_id = clmns.xml_collection_id
LEFT OUTER JOIN sys.schemas AS s2clmns ON s2clmns.schema_id = xscclmns.schema_id
WHERE
(clmns.name=@_msparam_0)and((v.type = @_msparam_1)and(v.name=@_msparam_2 and SCHEMA_NAME(v.schema_id)=@_msparam_3))',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000),@_msparam_2 nvarchar(4000),@_msparam_3 nvarchar(4000)',@_msparam_0=N'target_data',@_msparam_1=N'V',@_msparam_2=N'dm_xe_session_targets',@_msparam_3=N'sys'</value>
    </data>
    <data name="data_stream">
      <type name="binary_data" package="package0" />
      <value />
    </data>
    <data name="output_parameters">
      <type name="xml" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_statement_completed" package="sqlserver" timestamp="2016-02-02T12:40:09.887Z">
    <data name="duration">
      <type name="int64" package="package0" />
      <value>294056</value>
    </data>
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>141000</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="last_row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="line_number">
      <type name="int32" package="package0" />
      <value>1</value>
    </data>
    <data name="offset">
      <type name="int32" package="package0" />
      <value>0</value>
    </data>
    <data name="offset_end">
      <type name="int32" package="package0" />
      <value>76</value>
    </data>
    <data name="statement">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_session_targets</value>
    </data>
    <data name="parameterized_plan_handle">
      <type name="binary_data" package="package0" />
      <value />
    </data>
  </event>
  <event name="sql_batch_completed" package="sqlserver" timestamp="2016-02-02T12:40:09.887Z">
    <data name="cpu_time">
      <type name="uint64" package="package0" />
      <value>141000</value>
    </data>
    <data name="duration">
      <type name="uint64" package="package0" />
      <value>294716</value>
    </data>
    <data name="physical_reads">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="logical_reads">
      <type name="uint64" package="package0" />
      <value>3</value>
    </data>
    <data name="writes">
      <type name="uint64" package="package0" />
      <value>0</value>
    </data>
    <data name="row_count">
      <type name="uint64" package="package0" />
      <value>5</value>
    </data>
    <data name="result">
      <type name="rpc_return_result" package="sqlserver" />
      <value>0</value>
      <text>OK</text>
    </data>
    <data name="batch_text">
      <type name="unicode_string" package="package0" />
      <value>select * from sys.dm_xe_session_targets</value>
    </data>
  </event>
</RingBufferTarget>